{% extends "blocks/main.njk" %}

{% block main %}
    <h1>Introduction</h1>
    <div class="text-block">
        <p>CuboMX is a reactive micro-framework for developers who believe in the power of Server-Side Rendered (SSR) applications and the simplicity of HTML. It challenges the complexity of modern SPAs by embracing a simple, powerful idea: <strong>your server should send HTML, not JSON.</strong>
        </p>
        <p>Following a server-centric philosophy, CuboMX is designed to seamlessly "hydrate" your server-rendered HTML into reactive JavaScript components. It's backend-agnostic, allowing you to enhance applications written in any language - PHP, Python, Ruby, Java, or Node.js - with a modern, reactive user experience without a full rewrite.</p>
    </div>

    <h2>A First Look</h2>
    <div class="text-block">
        <p>Before diving deep, let's see a simple example. Imagine you want a basic counter. With CuboMX, your HTML is the star.</p>
    </div>
    {# CODE BLOCK #}
    <div class="code-block" mx-data="codeBlock()">
        <header>
            <div class="code-block-icon js-icon">
                {% include "svg/js-bold.svg" %}
            </div>
        </header>
        <pre>
    <code mx-attrs:html="code">
    import { CuboMX } from "cubomx";
    import { themeHandler } from "./theme-handler";
    import { nav } from "./nav";
    import { codeBlock } from "./code";

    CuboMX.store("themeHandler", themeHandler);
    CuboMX.component("nav", nav);
    CuboMX.component("codeBlock", codeBlock);

    CuboMX.start();
    </code>
    </pre>
    </div>
    {# CODE BLOCK #}

{% endblock %}