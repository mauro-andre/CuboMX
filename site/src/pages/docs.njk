{% extends "blocks/main.njk" %}

{% block main %}
    <h1>Introduction</h1>
    <div class="text-bloc">
        <p>CuboMX is a reactive micro-framework for developers who believe in the power of Server-Side Rendered (SSR) applications and the simplicity of HTML. It challenges the complexity of modern SPAs by embracing a simple, powerful idea: <strong>your server should send HTML, not JSON.</strong>
        </p>
        <p>Following a server-centric philosophy, CuboMX is designed to seamlessly "hydrate" your server-rendered HTML into reactive JavaScript components. It's backend-agnostic, allowing you to enhance applications written in any language - PHP, Python, Ruby, Java, or Node.js - with a modern, reactive user experience without a full rewrite.</p>
    </div>
    <h2>Core Principles</h2>
    <ul class="list-bloc">
        <li>
            <strong>HTML as the Source of Truth:</strong> CuboMX starts where your server finishes. It treats the initial server-rendered HTML as the definitive source of state, declaratively hydrating your JavaScript objects directly from the DOM. No need to fetch the same data twice.
        </li>
        <li>
            <strong>JavaScript is for Behavior, Not Structure:</strong> Keep your logic where it belongsâ€”in pure JavaScript modules. CuboMX uses simple directives as bridges to your state, not as a place for inline mini-programs, keeping your HTML clean and focused on structure.
        </li>
        <li>
            <strong>Hierarchical and Predictable State:</strong> CuboMX offers a powerful two-tier state management system. All components and stores are globally accessible for easy debugging and cross-component communication, but within a component's template, you have direct, local access to its properties. This provides the perfect balance of encapsulation and global predictability.
        </li>
        <li>
            <strong>Enhance, Don't Replace:</strong>  CuboMX is designed to enhance existing server-rendered applications. You don't need to build a separate SPA. Add reactivity where you need it, from simple components to dynamic AJAX-driven content swaps.
        </li>
    </ul>
{% endblock %}